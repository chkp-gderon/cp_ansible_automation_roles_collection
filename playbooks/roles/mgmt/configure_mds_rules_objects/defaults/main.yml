---

#################################################################
#################################################################
#################################################################
### Configuration for the CMA: WIFI

# Network groups
WIFI-cp_mgmt_group_tasks:
- { state: present, name: TestGroupAutomation, comments: "Test group created from Ansible via WEB API"}
#- { state: present, name: 'ACME_ext_nets'}
# - { state: present, name: 'ACME_Security_Gateways'}

# Networks
WIFI-cp_mgmt_network_tasks:
- { state: present, name: 'net_10.123.123.0_m24', subnet: 10.123.123.0/24, groups: ["TestGroupAutomation"], color: blue, comments: "Test network created from Ansible via WEB API"}
- { state: present, name: 'net_10.123.124.0_m24', subnet: 10.123.124.0/24, groups: ["TestGroupAutomation"], color: blue, comments: "Test network created from Ansible via WEB API"}
- { state: present, name: 'net_10.123.125.0_m24', subnet: 10.123.125.0/24, groups: ["TestGroupAutomation"], color: blue, comments: "Test network created from Ansible via WEB API"}
#- { state: present, name: 'net_10.123.123.0_m24', subnet: 10.123.123.0/24, groups: ["TestGroupAutomation"], color: blue}
#- { state: present, name: 'net_10.123.124.0_m24', subnet: 10.123.124.0/24, groups: ["TestGroupAutomation"], color: blue}
#- { state: present, name: 'External', subnet: 10.2.0.0/24, groups: ["ACME_ext_nets"], color: blue}
#- { state: present, name: 'Internal', subnet: 10.2.1.0/24, groups: ["ACME_nets"], color: blue}
# - { state: present, name: 'WebServers', subnet: 10.2.10.0/24, groups: ["ACME_nets"], color: cyan}
# - { state: present, name: 'DBServers', subnet: 10.2.11.0/24, groups: ["ACME_nets"], color: cyan}
# - { state: present, name: 'LoadBalancer1', subnet: 10.2.5.0/24, groups: ["ACME_nets"], color: orange}
# - { state: present, name: 'LoadBalancer2', subnet: 10.2.6.0/24, groups: ["ACME_nets"], color: orange}


# Hosts
WIFI-cp_mgmt_host_tasks:
- { state: present, name: test_host_automation, ip: 123.123.1.1, color: red, 
    nat_auto_rule: false, nat_method: static, nat_ipv4: , nat_install_on: All,
    comments: "Test host created from Ansible via WEB API"
  }
- { state: present, name: test_host_automation2, ip: 123.123.1.2, color: red, 
    nat_auto_rule: false, nat_method: static, nat_ipv4: , nat_install_on: All,
    comments: "Test host created from Ansible via WEB API"
  } 


# UDP services
WIFI-cp_mgmt_service_udp:
- { state: present, name: 'udp_11111', port: 11111, acceptReplies: true, defaultTimeout: 3600, color: orange, comments: "Test service created from Ansible via WEB API"}
- { state: present, name: 'udp_10123', port: 10123, acceptReplies: true, defaultTimeout: 3600, color: orange, comments: "Test service created from Ansible via WEB API"}
- { state: present, name: 'udp_10124', port: 10124, acceptReplies: true, defaultTimeout: 3600, color: orange, comments: "Test service created from Ansible via WEB API"}

# List of access-sections to add to rulebase (not supported with official ansible module)
#mgmt_api_add_access_section:
#- { state: present, name: default drop, layer: Orchestration_Demo_Policy Network, position: top}
#- { state: present, name: ACMECorp Rules, layer: Orchestration_Demo_Policy Network, position: top}

# Policy packages
WIFI-cp_mgmt_package_tasks:
- { state: present, 
    name: Automation_Test_Policy, 
    comments: "Demo policy created from Ansible via WEB API", 
    color: forest green, 
    threat_prevention: true, 
    access: true 
  }

# # Rules
WIFI-cp_mgmt_access_rule_tasks:
- { state: present, layer: Automation_Test_Policy Network, name: First rule, 
    position: 1, source: ["test_host_automation", "test_host_automation2"], destination: any, service: ["ssh", "https"], action: accept, track_type: log 
  }
- { state: present,  layer: Automation_Test_Policy Network, name: Second rule, 
    position: 2, source: TestGroupAutomation, destination: any, service: ["udp_10123"], action: accept, track_type: log 
  }
- { state: present, layer: Automation_Test_Policy Network, name: Third rule, 
    position: 3, source: any, destination: ["net_10.123.123.0_m24", "net_10.123.124.0_m24"], service: ["udp_10124"], action: accept, track_type: log 
    #position: 3, source: any, destination: any, service: ["udp_10124"], action: accept, track_type: log 
  }
# - { state: present, layer: Automation_Test_Policy Network, name: ACMECorp WebServer to DB, 
#     position: 4, source: WebServers, destination: DBServers, service: ["MySQL"], action: accept, track_type: log 
#   }
# - { state: present, layer: Automation_Test_Policy Network, name: ACMECorp WebServer Outbound Access, 
#     position: 5, source: WebServers, destination: any, service: ["http", "https", "ntp", "dns"], action: accept, track_type: log 
#   }
# - { state: present, layer: Automation_Test_Policy Network,  name: Allow ICMP and HTTPS,
#     position: 6, source: any, destination: any, service: ["icmp-requests", "https"], action: accept, track_type: log 
#   }
# - { state: present, layer: Automation_Test_Policy Network,  name: LoadBalancers,
#     position: 7,  source: any, destination: ["LoadBalancer1", "LoadBalancer2", "hst-dmz-webserver"], service: ["http", "https"], action: accept, track_type: log 
#   }
  # Enable log on the existing cleanup rule
- { state: present, layer: Automation_Test_Policy Network, name: Cleanup rule, 
    position: 4, position_bottom: "default drop", source: any, destination: ["any"], service: ["any"], action: drop, track_type: log }

# # Gateways
# WIFI-cp_mgmt_simple_gateway_tasks:
# - { state: present, name: sg101, sickey: vpn123, gw_version: R80.20, 
#     anti_bot: true, anti_virus: true, appi_ctrl: true, color: blue, firewall: true, ips: true, threat_emulation: false, url_filtering: true, 
#     eth0_ipv4: 192.168.233.101, eth0_ipv4_network_mask: 255.255.255.0, eth0_anti_spoofing: true, eth0_topology: External, 
#     eth1_ipv4: 10.101.1.1,      eth1_ipv4_network_mask: 255.255.255.0, eth1_anti_spoofing: true, eth1_topology: Internal, 
#     eth1_topology_ip_behind_if: network defined by the interface ip and net mask 
#   }




#################################################################
#################################################################
#################################################################
### Configuration for the CMA: CMA1

CMA1-cp_mgmt_group_tasks:
- { state: present, name: ACME_nets}


CMA1-cp_mgmt_network_tasks:
- { state: present, name: 'ExternalNew', subnet: 10.2.0.0/24, color: blue}
- { state: present, name: 'InternalNew', subnet: 10.2.1.0/24, color: blue}
- { state: present, name: 'net_10.2.2.0_m24', subnet: 10.2.2.0/24, color: blue}
# - { state: present, name: 'WebServers', subnet: 10.2.10.0/24, groups: ["ACME_nets"], color: cyan}
# - { state: present, name: 'DBServers', subnet: 10.2.11.0/24, groups: ["ACME_nets"], color: cyan}


CMA1-cp_mgmt_host_tasks:
- { state: present, name: h_10.2.0.10, ip: 10.2.0.10, color: red, 
    nat_auto_rule: false, nat_method: static, nat_ipv4: , nat_install_on: All
  }
- { state: present, name: h_10.2.0.11, ip: 10.2.0.11, color: red, 
    nat_auto_rule: false, nat_method: static, nat_ipv4: , nat_install_on:  All 
  }
- { state: present, name: h_10.2.0.12, ip: 10.2.0.12, color: red, 
    nat_auto_rule: false, nat_method: static, nat_ipv4: , nat_install_on:  All 
  }
- { state: present, name: h_10.2.0.14, ip: 10.2.0.14, color: red, 
    nat_auto_rule: false, nat_method: static, nat_ipv4: , nat_install_on:  All 
  }


# UDP services
CMA1-cp_mgmt_service_udp:
- { state: present, name: 'udp_10010', port: 10010, acceptReplies: true, defaultTimeout: 3600, color: orange}
- { state: present, name: 'udp_10011', port: 10011, acceptReplies: true, defaultTimeout: 3600, color: orange}


CMA1-cp_mgmt_package_tasks:
- { state: present, 
    name: Orchestration_Demo_Policy10, 
    comments: Created by ansible during Orchestration demo, 
    color: forest green, 
    threat_prevention: true, 
    access: true 
  }


CMA1-cp_mgmt_access_rule_tasks:
- { state: present, layer: Orchestration_Demo_Policy10 Network, name: ACMECorp management access to Security Gateways, 
    position: 1, source: ExternalNew, destination: net_10.2.2.0_m24, service: ["ssh", "https"], action: accept, track_type: log 
  }
- { state: present,  layer: Orchestration_Demo_Policy10 Network, name: ACMECorp external to Any, 
    position: 2, source: ExternalNew, destination: any, service: ["any"], action: accept, track_type: log 
  }
  # Enable log on the existing cleanup rule
- { state: present, layer: Orchestration_Demo_Policy10 Network, name: Cleanup rule, 
    position: 3, position_bottom: "default drop", source: any, destination: ["any"], service: ["any"], action: drop, track_type: log }


CMA1-cp_mgmt_simple_gateway_tasks:
- { state: present, name: sg100CMA1, sickey: vpn123, gw_version: R80.20, 
    anti_bot: true, anti_virus: true, appi_ctrl: true, color: blue, firewall: true, ips: true, threat_emulation: false, url_filtering: true, 
    eth0_ipv4: 192.168.233.201, eth0_ipv4_network_mask: 255.255.255.0, eth0_anti_spoofing: true, eth0_topology: External, 
    eth1_ipv4: 10.101.1.101,      eth1_ipv4_network_mask: 255.255.255.0, eth1_anti_spoofing: true, eth1_topology: Internal, 
    eth1_topology_ip_behind_if: network defined by the interface ip and net mask 
  }



#################################################################
#################################################################
#################################################################
### Configuration for the CMA: CMA X