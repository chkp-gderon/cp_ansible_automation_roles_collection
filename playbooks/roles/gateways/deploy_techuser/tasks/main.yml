---
  ###########################################
  # Print, prepare vars

  - name: Info 
    debug: msg="We are in the role REGULAR_GWs"  

  - name: Name 
    debug: msg={{ name }} 
  
  #- meta: end_play

  - name: Set facts 
    set_fact:
      userName: robot
      userRealName: "Robot Automation"


  - name: Print userName 
    debug: msg={{ userName }} 




#lock database override
#add user robot uid 0 homedir /home/robot
#set user robot gid 0 shell /bin/bash
#set user robot realname Robot Automation
#add rba user robot roles adminRole
#save config

  # - name: Execute clish command to add user
  #   shell: "ls -al"
  #   register: command_output    
  #   ignore_errors: true  

  # - name: Print command_output
  #   debug: msg={{ command_output.stdout }}  

  #- meta: end_play


  - name: Execute clish command  lock database override
    shell: 'clish -c "lock database override"'
    register: command_output
    ignore_errors: true
  - name: Print command_output
    debug: msg={{ command_output.stdout }}  

  - name: Execute clish command add user
    shell: 'clish -c "add user {{ userName }} uid 0 homedir /home/{{ userName }}"'
    register: command_output    
    ignore_errors: true
  - name: Print command_output
    debug: msg={{ command_output.stdout }}  

  - name: Execute clish command set user
    shell: 'clish -c "set user {{ userName }} realname \"{{ userRealName }}\""'  
    register: command_output
    ignore_errors: true
  - name: Print command_output
    debug: msg={{ command_output.stdout }}  

  - name: Execute clish command to add rba user
    shell: 'clish -c "add rba user {{ userName }} roles adminRole"'
    register: command_output
    ignore_errors: true
  - name: Print command_output
    debug: msg={{ command_output.stdout }}  

  - name: Execute clish command to set user shell
    shell: 'clish -c "set user {{ userName }} gid 0 shell /bin/bash"'
    register: command_output
    ignore_errors: true
  - name: Print command_output
    debug: msg={{ command_output.stdout }}  

  - name: Execute clish command "save config"
    shell: 'clish -c "save config"'
    register: command_output
    ignore_errors: true
  - name: Print command_output
    debug: msg={{ command_output.stdout }}  


  #- meta: end_play

  # Copy key
  - name: Create folder /etc/ssh/auth/{{ userName }}
    file:
      #path: /etc/ssh/auth/{{ userName }}
      path: "{{ remote_key_path }}{{ userName }}"
      state: directory
      owner: admin
      group: root
      mode: 0755
  
  - name: Copy key file into the folder
    copy:
      src: "{{ local_key_path }}{{ local_key_name }}"
      dest: "{{ remote_key_path }}{{ userName }}/{{ remote_key_fileName }}"
      mode: 0644
  
