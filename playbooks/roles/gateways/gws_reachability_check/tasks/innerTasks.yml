---
  - name: Gateway name
    debug: msg={{ item.gw_name }}

  - name: Gateway name
    debug: msg={{ item.gw_ipaddr }}
  
  #- meta: end_play

  ##############################################
  ### ping reachability test   

  - name: Test ping reachability to {{ item.gw_ipaddr }}  
    shell: ping -c 3 {{ item.gw_ipaddr }}
    register: ping_test_output
    async: 6
    poll: 2 
    ignore_errors: yes
    

  - name: Gateway ping_test_output
    debug: msg={{ ping_test_output.stdout }}

  - name: Set ping test result    
    set_fact: 
      ping_test_result: failed
    when: 
      ping_test_output.stdout is undefined

  - name: Set ping test result ok   
    set_fact: 
      ping_test_result: ok
    when: 
      (ping_test_output.stdout is defined and    
      ping_test_output.stdout.find(" 0% packet loss")!=-1)                
  
  - name: Set ping test result failed
    set_fact: 
      ping_test_result: failed
    when: 
      (ping_test_output.stdout is defined and
      ping_test_output.stdout.find(" 0% packet loss")==-1)            

  - name: Print ping_test_result
    debug: msg={{ ping_test_result }}

  # - name: Print ping_test_result
  #   debug: msg={{ ping_test_result.msg }}
  
  #- meta: end_play


  ##############################################
  ### SSH reachability test   
  - name: Test reachability ssh
    shell: telnet {{ item.gw_ipaddr }} 22
    async: 6
    poll: 2 
    register: ssh_test_output
    ignore_errors: yes

  - name: Print ssh_test_output
    debug: msg={{ ssh_test_output.stdout }}
    when: ssh_test_output.stdout is defined  

  # # Just for Connection refused search. Delete it later. 
  # - name: Write command output into the file
  #   #shell: echo "{{ ssh_test_output.stdout }}" >> output/ssh_https_test_results.log
  #   shell: echo "{{ ssh_test_output.stdout }}" >> {{ outputFolder }}/ssh_https_test_results.log    
  #   when: ssh_test_output.stdout is defined  
    
  - name: Set ssh test result    
    set_fact: 
      ssh_test_result: failed
    when: 
      ssh_test_output.stdout is undefined

  - name: Set ssh test result    
    set_fact: 
      ssh_test_result: connection_refused
    when: 
      (ssh_test_output.stdout is defined and
      ssh_test_output.stdout | search("Connection refused"))    

  - name: Set ssh test result    
    set_fact: 
      ssh_test_result: ok
    when: 
      (ssh_test_output.stdout is defined and
      ssh_test_output.stdout | search("Connected to"))    

  - name: Print ssh_test_result
    debug: msg={{ ssh_test_result }}


##############################################
### HTTPs reachability test   

  - name: Test reachability https
    shell: telnet {{ item.gw_ipaddr }} 443
    async: 6
    poll: 2 
    register: https_test_output
    ignore_errors: yes

  - name: Print https_test_output
    debug: msg={{ https_test_output.stdout }}
    when: https_test_output.stdout is defined  

  # # Just for Connection refused search. Delete it later. 
  # - name: Write command output into the file
  #   #shell: echo "{{ https_test_output.stdout }}" >> output/ssh_https_test_results.log
  #   shell: echo "{{ https_test_output.stdout }}" >> {{ outputFolder }}/ssh_https_test_results.log
  #   when: https_test_output.stdout is defined  

  - name: Set https test result    
    set_fact: 
      https_test_result: failed
    when: 
      https_test_output.stdout is undefined

  - name: Set https test result    
    set_fact: 
      https_test_result: connection_refused
    when: 
      (https_test_output.stdout is defined and
      https_test_output.stdout | search("Connection refused"))    

  - name: Set https test result    
    set_fact: 
      https_test_result: ok
    when: 
      (https_test_output.stdout is defined and
      https_test_output.stdout | search("Connected to"))    

  - name: Print https_test_result
    debug: msg={{ https_test_result }}


##############################################
### Create report entry

  - name: Create report line        
    #shell: echo "{{ ping_test_result }}" 
    #shell: echo "{{ item.CMA }};{{ item.hostName }};{{ item.gw_ipaddr }};{{ ping_test_result }};{{ ssh_test_result }};{{ https_test_result }}"     
    shell: echo "{{ item.gw_domain }};{{ item.gw_name }};{{ item.gw_ipaddr }};{{ ping_test_result }};{{ ssh_test_result }};{{ https_test_result }}"         
    register: reportLine

  - name: Print reportLine
    debug: msg={{ reportLine.stdout }}  

  - name: Write report entry to report
    shell: echo "{{ reportLine.stdout }}" >> {{ reportFileFullName.stdout }} 